name: Build Docker Image for Changed Services

on:
  push:
    branches:
      - main  # Trigger on commits to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [adservice, cartservice, userservice, orderservice, paymentservice]  # List all your services here

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for multi-platform builds

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache  # Docker build cache directory
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Check if service folder changed
      id: service-check
      run: |
        # Get the changed files in the commit
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^src/${{ matrix.service }}")
        if [ -z "$CHANGED_FILES" ]; then
          echo "No changes in src/${{ matrix.service }}. Skipping build."
          echo "::set-output name=build::false"
        else
          echo "Changes detected in src/${{ matrix.service }}. Proceeding with build."
          echo "::set-output name=build::true"
        fi

    - name: Build Docker image for ${{ matrix.service }}
      if: steps.service-check.outputs.build == 'true'  # Only run if changes were detected in the service folder
      run: |
        echo "Building Docker image for ${{ matrix.service }}..."
        docker build -t your-dockerhub-username/${{ matrix.service }}:latest ./src/${{ matrix.service }}

    - name: Push Docker image to Docker Hub
      if: steps.service-check.outputs.build == 'true' && github.ref == 'refs/heads/main'  # Only push on main branch
      run: |
        echo ${{ secrets.DOCKER_USERNAME }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push your-dockerhub-username/${{ matrix.service }}:latest
