name: Build Docker Image for Changed Services

on:
  push:
    branches:
      - main  # Trigger on commits to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [adservice, cartservice, userservice, orderservice, paymentservice]  # List all your services here

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build image
      run: docker build -t adservice:latest src/adservice/
    - name: List images
      run: docker image ls
    # - name: Setup python
    #   uses: actions/setup-python@v2
    #   with: 
    #     python-version: '3.11'
    # - name: Install boto3
    #   run: | 
    #     python -m pip install --upgrade pip
    #     pip install boto3
    # - name: Read image tag from DynamoDB
    #   run: python AWS-Python/get-dynamodb.py
      





    - name: Docker tag
      env: 
        ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        REGION: ${{ secrets.AWS_REGION }}
      run: docker tag adservice:latest $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/image_repo:latest
    - name: Login to ECR
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    - name: Push Image
      run: docker push 721699489018.dkr.ecr.eu-west-1.amazonaws.com/image_repo:latest
    - name: red from dynamodb
      run: | 
        VERSION=$(aws dynamodb get-item --table-name adservice_versions --key '{"adservice_version": {"S": "version_number"}}' --region eu-west-1 --query 'Item.value.S' --output text")
        
    - name: VERSION
      run: | 
        echo $VERSION

    